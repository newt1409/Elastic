version: '2.2'

x-es_instance: &_es_instance
    image: docker.elastic.co/elasticsearch/elasticsearch:$ES_VERSION
    #mem_limit: $ES_MAX_MEM
    ulimits:
        nofile:
            soft: 65535
            hard: 65535
        memlock:
            soft: -1
            hard: -1
#    networks:
#        - arkime-elastic

x-logstash-variables: &logstash-variables
    LOGSTASH_OUI_LOOKUP       : 'true'
    LOGSTASH_SEVERITY_SCORING : 'true'
    LOGSTASH_REVERSE_DNS      : 'false'
    # OS_EXTERNAL_HOSTS : '10.0.0.123:9200'
    # OS_EXTERNAL_SSL : 'true'
    # OS_EXTERNAL_SSL_CERTIFICATE_VERIFICATION : 'false'
    # For security, OS_EXTERNAL_USER and OS_EXTERNAL_PASSWORD should be stored in Logstash keystore using ./scripts/auth_setup
    #   See also volume mount for logstash.keystore below.
    # OS_EXTERNAL_USER : 'janedoe'
    # OS_EXTERNAL_PASSWORD : 'secret'
x-common-lookup-variables: &common-lookup-variables
        FREQ_LOOKUP : 'false'
        FREQ_SEVERITY_THRESHOLD : '2.0'
        TOTAL_MEGABYTES_SEVERITY_THRESHOLD : 1000
        CONNECTION_SECONDS_SEVERITY_THRESHOLD : 3600
        QUESTIONABLE_COUNTRY_CODES : 'CN,IR,KP,RU,UA'
#x-common-beats-variables: &common-beats-variables
#        BEATS_SSL : 'false'



services:
    es01:
        <<: *_es_instance
        container_name: $ES_NODE1
        environment:
            - node.name=$ES_NODE1
            - discovery.seed_hosts=$ES_NODE2,$ES_NODE3
            # default
            - cluster.name=es-cluster
            - cluster.initial_master_nodes=$ES_NODE1,$ES_NODE2,$ES_NODE3
            - bootstrap.memory_lock=true
            - network.host=0.0.0.0
        volumes:
            - $ES_DATA_DIR/$ES_NODE1:/usr/share/elasticsearch/data
            - $ES_DATA_DIR/$ES_NODE1/logs:/usr/share/elasticsearch/logs
#            - $ES_DATA_DIR/$ES_NODE1/elasticsearch/:/usr/share/elasticsearch/config
        ports:
            - 9200:9200    
    es02:
        <<: *_es_instance
        container_name: $ES_NODE2
        environment:
            - node.name=$ES_NODE2
            - discovery.seed_hosts=$ES_NODE1,$ES_NODE3
            # default
            - cluster.name=es-cluster
            - cluster.initial_master_nodes=$ES_NODE1,$ES_NODE2,$ES_NODE3
            - bootstrap.memory_lock=true
            - network.host=0.0.0.0
        volumes:
            - $ES_DATA_DIR/$ES_NODE2:/usr/share/elasticsearch/data
            - $ES_DATA_DIR/$ES_NODE2/logs:/usr/share/elasticsearch/logs
#            - $ES_DATA_DIR/$ES_NODE1/elasticsearch/:/usr/share/elasticsearch/config
            
    es03:
        <<: *_es_instance
        container_name: $ES_NODE3
        environment:
            - node.name=$ES_NODE3
            - discovery.seed_hosts=$ES_NODE1,$ES_NODE2
            # default
            - cluster.name=es-cluster
            - cluster.initial_master_nodes=$ES_NODE1,$ES_NODE2,$ES_NODE3
            - bootstrap.memory_lock=true
            - network.host=0.0.0.0
        volumes:
            - $ES_DATA_DIR/$ES_NODE3:/usr/share/elasticsearch/data
            - $ES_DATA_DIR/$ES_NODE3/logs:/usr/share/elasticsearch/logs
#            - $ES_DATA_DIR/$ES_NODE1/elasticsearch/:/usr/share/elasticsearch/config

    logstash:
#        build:
#            context: .
#            dockerfile: Dockerfiles/logstash.Dockerfile
#        image: malcolmnetsec/logstash-oss:5.1.0
        image: docker.elastic.co/kibana/kibana:$ES_VERSION
        restart: "no"
        stdin_open: false
        tty: true
        hostname: logstash
        environment:
            #<< : *process-variables
            << : *logstash-variables
            #<< : *common-beats-variables
            << : *common-lookup-variables
            OS_HOSTS : 'opensearch:9200'
            LS_JAVA_OPTS : '-Xms2g -Xmx2g -Xss2m -Djava.security.egd=file:/dev/./urandom -Dlog4j.formatMsgNoLookups=true'
        depends_on:
            - es01
            - es02
            - es03
        expose:
            - 5044
            - 9001
            - 9600
        volumes:
            - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
            - ./logstash/pipelines:/usr/share/logstash/malcolm-pipelines.available:ro
            - ./logstash/maps/malcolm_severity.yaml:/etc/malcolm_severity.yaml:ro
            - ./logstash/certs/logstash.keystore:/usr/share/logstash/config/logstash.keystore:rw
            - ./nginx/ca-trust:/usr/share/logstash/ca-trust:ro
            - ./logstash/certs/ca.crt:/certs/ca.crt:ro
            - ./logstash/certs/server.crt:/certs/server.crt:ro
            - ./logstash/certs/server.key:/certs/server.key:ro
            - ./cidr-map.txt:/usr/share/logstash/config/cidr-map.txt:ro
            - ./host-map.txt:/usr/share/logstash/config/host-map.txt:ro
            - ./net-map.json:/usr/share/logstash/config/net-map.json:ro
        healthcheck:
            test: ["CMD", "curl", "--silent", "--fail", "http://localhost:9600"]
            interval: 30s
            timeout: 15s
            retries: 3
            #start_period: 600s




    kibana:
        image: docker.elastic.co/kibana/kibana:$ES_VERSION
        container_name: kibana
        depends_on:
            - $ES_NODE1
            - $ES_NODE2
            - $ES_NODE3
        ports:
            - 5601:5601
        environment:
            ELASTICSEARCH_URL: http://es01:9200
            ELASTICSEARCH_HOSTS: http://es01:9200
    #    networks:
    #        - arkime-elastic
    filebeat:
        image: docker.elastic.co/beats/filebeat:$ES_VERSION
        container_name: filebeat
        depends_on:
            - kibana
        volumes:
            - "./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml"
            - ../Zeek/logs:/pcap
        command: -e

#volumes:
#    arkime_config:
#    arkime_logs:

#networks:
#    arkime-elastic:
